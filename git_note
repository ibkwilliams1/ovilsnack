 CHAPTER 7
Generating an SSH key
this is done in the following steps bellow
on your machine 
ensure .ssh directory exist or make the direcory by typing 
mkdir .ssh
cd .ssh/
To generate the ssh key
type ssh-keygen -t rsa -C "e.mail"
The above command will generate two keys 
TO VERIFY SSH AUTHENTICATION WITH GITHUB
copy the public key to your remote gitHUB in the ssh key

CHAPTER 8 | VIEW |EDIT | CREATE | DELETE FILES
The best recommendation is to work locally and then push the work to the remote github
TO CREATE A LOCAL COPY WITH CLONE  OF OUR REMOTE REPO
GOTO the remote repo scroll to SSh CLONE and copy the url and switch on the terminal then type
git clone {the ssh url}
git clone git@github.com:ibkwilliams1/my-website.git
OR 
git clone {the ssh url} {the new folder name we want the remote to be called}
git clone git@github.com:ibkwilliams1/my-website.git ovilsnack

git status [ this command check the stage of git weither commit stage OR ready for PUSH to the remote repository

TO PUSH UP OR PUBLISH BACK TO GITHUB

Use the below command
git push origin {branch} e.g. git push origin TestGit

TO preset git push to automatically recognize the corresponding remote branch in which local  branch pushes the current branch, but this is already solve in git 2.0
git config --global push.default simple

THE DIFF BTW FETCH AND PULL
When you have different versions of editions/ commits of files in both remote and local repos
THIS WILL RESULT IN REJECT OF ANY PUSH COMMAND

the best practice is to first FETCH > PULL > PUSH in this order
PULL = FETCH + MERGE (COMMAND TOGETHER)

TO UPDATE REPOSITORY AND REMOTE REFERENCES
git remote set-url origin {the current ssh url from git remote}
e.g.
git remote set-url origin git@github.com:ibkwilliams1/ovilsnack.git

TO ADD
git add .
note the dot is the argument that specify add everything in the repository.

TO COMMIT
git commit -m "commit msg"

TO PUSH UP TO GITHUB

git push origin [branch name]
the first parameter is the name of the remote to use =origin
and then the branch = master or TestGit or your prefered branch in the remote repo

TO CONFIGURE GIT PUSH.DEFAULT [this is peculiar to git version older than 2.0

TO CHECK THE GIT VERSION
TYPE git version
To CONFIGURE THE PUSH.DEFAULT
TYPE
git config --global push.default simple
when push.default is set to 'matching' git will push local branches to the remote branches that already exist with the same name

but Git. 2.0, Git defaults to the more conservative
'simple' behaviou, which only pushes the CURRENT BRANCH to the CORRESPONDING REMOTE BRANCH 
